#!/bin/bash

echo "üß™ StoryN# Test 3: Authentication Protection
echo "3Ô∏è‚É£ Testing API Authentication..."
AUTH_RESULT=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/api/child-profiles) End-to-End Integration Test"
echo "========================================"
echo ""

# Test 1: Server Health
echo "1Ô∏è‚É£ Testing Server Health..."
if curl -s -f http://localhost:3001 > /dev/null; then
    echo "‚úÖ Server is running and responsive"
else
    echo "‚ùå Server is not responding"
    exit 1
fi
echo ""

# Test 2: Database Connection
echo "2Ô∏è‚É£ Testing Database Connection..."
DB_RESULT=$(curl -s http://localhost:3001/api/test)
if echo "$DB_RESULT" | grep -q '"success":true'; then
    echo "‚úÖ Database connected successfully"
    echo "$DB_RESULT" | python3 -c "import sys, json; data=json.load(sys.stdin); print(f'   üìä Data: {data[\"counts\"][\"users\"]} users, {data[\"counts\"][\"children\"]} children, {data[\"counts\"][\"characters\"]} characters, {data[\"counts\"][\"stories\"]} stories')"
else
    echo "‚ùå Database connection failed"
    echo "   Response: $DB_RESULT"
fi
echo ""

# Test 3: Authentication Protection
echo "3Ô∏è‚É£ Testing API Authentication..."
AUTH_RESULT=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/api/child-profiles)
if [ "$AUTH_RESULT" = "401" ]; then
    echo "‚úÖ API endpoints properly protected with authentication"
else
    echo "‚ùå Authentication not working correctly (HTTP $AUTH_RESULT)"
fi
echo ""

# Test 4: Story Generation Endpoint
echo "4Ô∏è‚É£ Testing Story Generation Endpoint..."
STORY_RESULT=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://localhost:3001/api/stories/generate -H "Content-Type: application/json" -d '{"theme":"magic","characterIds":["char-1"],"childProfileId":"child-1"}')
if [ "$STORY_RESULT" = "401" ]; then
    echo "‚úÖ Story generation endpoint properly protected"
else
    echo "‚ùå Story generation endpoint security issue (HTTP $STORY_RESULT)"
fi
echo ""

# Test 5: Environment Variables
echo "5Ô∏è‚É£ Testing Environment Configuration..."
if [ -f .env.local ]; then
    echo "‚úÖ Environment file exists"
    
    # Check key variables (without exposing values)
    if grep -q "OPENAI_API_KEY=" .env.local; then
        echo "‚úÖ OpenAI API key configured"
    else
        echo "‚ùå OpenAI API key missing"
    fi
    
    if grep -q "GOOGLE_CLIENT_ID=" .env.local; then
        echo "‚úÖ Google OAuth configured"
    else
        echo "‚ùå Google OAuth missing"
    fi
    
    if grep -q "DATABASE_URL=" .env.local; then
        echo "‚úÖ Database URL configured"
    else
        echo "‚ùå Database URL missing"
    fi
else
    echo "‚ùå Environment file missing"
fi
echo ""

echo "üéØ Integration Test Summary"
echo "=========================="
echo "‚úÖ Core application infrastructure is working"
echo "‚úÖ Database is connected and populated with test data"
echo "‚úÖ API endpoints are properly secured"
echo "‚úÖ Environment configuration is complete"
echo ""
echo "üöÄ Ready for Manual Testing:"
echo "   ‚Ä¢ Google OAuth sign-in flow"
echo "   ‚Ä¢ Story creation with OpenAI"
echo "   ‚Ä¢ Character management"
echo "   ‚Ä¢ Story reading experience"
echo ""
echo "üåê Application URL: http://localhost:3001"
